diff -Naurp vdr-2.3.7/device.c vdr-2.3.7-patch/device.c
--- vdr-2.3.7/device.c	2017-06-16 19:04:13.000000000 +0300
+++ vdr-2.3.7-patch/device.c	2017-06-16 19:07:46.000000000 +0300
@@ -20,6 +20,9 @@
 #include "status.h"
 #include "transfer.h"
 
+// channelscan
+bool scanning_on_receiving_device = false;
+
 // --- cLiveSubtitle ---------------------------------------------------------
 
 class cLiveSubtitle : public cReceiver {
diff -Naurp vdr-2.3.7/device.h vdr-2.3.7-patch/device.h
--- vdr-2.3.7/device.h	2017-06-16 19:04:13.000000000 +0300
+++ vdr-2.3.7-patch/device.h	2017-06-16 19:08:15.000000000 +0300
@@ -33,6 +33,8 @@
 #define VOLUMEDELTA       (MAXVOLUME / Setup.VolumeSteps) // used to increase/decrease the volume
 #define MAXOCCUPIEDTIMEOUT 99 // max. time (in seconds) a device may be occupied
 
+extern bool scanning_on_receiving_device;
+
 enum eSetChannelResult { scrOk, scrNotAvailable, scrNoTransfer, scrFailed };
 
 // Note that VDR itself always uses pmAudioVideo when replaying a recording!
diff -Naurp vdr-2.3.7/vdr.c vdr-2.3.7-patch/vdr.c
--- vdr-2.3.7/vdr.c	2017-06-16 19:04:13.000000000 +0300
+++ vdr-2.3.7-patch/vdr.c	2017-06-16 19:07:08.000000000 +0300
@@ -964,7 +964,7 @@ int main(int argc, char *argv[])
         if (!EITScanner.Active() && cDevice::PrimaryDevice()->HasDecoder()) {
            static time_t lastTime = 0;
            if (!cDevice::PrimaryDevice()->HasProgramme()) {
-              if (!CamMenuActive() && Now - lastTime > MINCHANNELWAIT) { // !CamMenuActive() to avoid interfering with the CAM if a CAM menu is open
+              if (!CamMenuActive() && !scanning_on_receiving_device && Now - lastTime > MINCHANNELWAIT) { // !CamMenuActive() to avoid interfering with the CAM if a CAM menu is open
                  LOCK_CHANNELS_READ;
                  const cChannel *Channel = Channels->GetByNumber(cDevice::CurrentChannel());
                  if (Channel && (Channel->Vpid() || Channel->Apid(0) || Channel->Dpid(0))) {
